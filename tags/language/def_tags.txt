fails:Defining a method at the top-level defines it on Object with private visibility by default
fails:Defining an 'initialize' method sets the method's visibility to private
fails:Defining an 'initialize_copy' method sets the method's visibility to private
fails:Defining an 'initialize_dup' method sets the method's visibility to private
fails:Defining an 'initialize_clone' method sets the method's visibility to private
fails:Defining a 'respond_to_missing?' method sets the method's visibility to private
fails:An instance method raises an error with too few arguments
fails:An instance method raises an error with too many arguments
fails:An instance method definition with a splat requires the presence of any arguments that precede the *
fails:An instance method with a default argument evaluates the default when required arguments precede it
fails:An instance method with a default argument prefers to assign to a default argument before a splat argument
fails:An instance method with a default argument warns and uses a nil value when there is an existing local method with same name
fails:A singleton method definition can be declared for a global variable
fails:A singleton method definition can be declared with an empty method body
fails:Redefining a singleton method does not inherit a previously set visibility
fails:A method defined with extreme default arguments can redefine itself when the default is evaluated
fails:A method definition inside a metaclass scope can create a class method
fails:A nested method definition creates an instance method when evaluated in an instance method
fails:A nested method definition creates a class method when evaluated in a class method
fails:A nested method definition creates a singleton method when evaluated in the metaclass of an instance
fails:A nested method definition creates a method in the surrounding context when evaluated in a def expr.method
fails:A nested method definition inside an instance_eval creates a singleton method
fails:A nested method definition creates an instance method inside Class.new
fails:A method definition always resets the visibility to public for nested definitions in Class.new
fails:A method definition always resets the visibility to public for nested definitions at the toplevel
fails:A method definition inside an instance_eval creates a class method when the receiver is a class
fails:A method definition inside an instance_eval creates a class method when the receiver is an anonymous class
fails:A method definition inside an instance_eval creates a class method when instance_eval is within class
fails:A method definition inside an instance_exec creates a class method when the receiver is a class
fails:A method definition inside an instance_exec creates a class method when the receiver is an anonymous class
fails:A method definition inside an instance_exec creates a class method when instance_exec is within class
fails:A method definition in an eval creates an instance method
fails:A method definition in an eval creates a class method
fails:A method definition in an eval creates a singleton method
fails:a method definition that sets more than one default parameter all to the same value allows the first argument to be given, and sets the rest to null
fails:a method definition that sets more than one default parameter all to the same value only allows overriding the default value of the first such parameter in each set
fails:a method definition that sets more than one default parameter all to the same value treats the argument after the multi-parameter normally
fails:The def keyword within a closure looks outside the closure for the visibility
